name: Angular CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - uses: actions/setup-node@v4
        with:
          node-version: "20.10.0"

      - name: Install dependencies
        run: |
          npm install -g @angular/cli
          npm ci

      # Install Chrome for headless testing
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Run unit tests with coverage (direct headless)
        run: ng test --no-watch --browsers=ChromeHeadless --code-coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage

      - name: Build
        run: npm run build -- --configuration production

      - name: Cypress E2E Tests
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start
          wait-on: http://localhost:4200
          browser: chrome
          headless: true

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

  deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Deploy Job
    needs: build_and_test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - uses: actions/setup-node@v4
        with:
          node-version: "20.10.0"

      - name: Install dependencies and build
        run: |
          npm install -g @angular/cli
          npm ci
          npm run build

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_GROUND_02B19441E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "dist/hacker-news/browser"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_GROUND_02B19441E }}
          action: "close"
